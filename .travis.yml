       # os: osx
       # osx_image: xcode10.1
       # xcode_destination: platform=iOS Simulator,OS=11.3,name=iPhone X
       # node_js: 10
       # cache:
       #   yarn: true
       #   directories:
       #     - node_modules
       # before_install:
       #     - curl -o- -L https://yarnpkg.com/install.sh | bash
       #     - export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"    
       #     - gem install cocoapods --pre
       # install:           
       #    - yarn global add cavy-cli
       #    - yarn global add react-native-cli
       #    - yarn install 
       # script:
       #   - react-native start --reset-cache &
       #   - cavy run-ios

      language: android
      jdk: oraclejdk8
      env:
        global:
        - ANDROID_API=28
        - EMULATOR_API=24
        - ANDROID_BUILD_TOOLS=28.0.3
      cache:
        yarn: true
        directories:
          # Android build cache (see http://tools.android.com/tech-docs/build-cache)
          - $HOME/.android/build-cache
          # Gradle dependencies
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
          # Android SDK
          - $HOME/android-sdk-dl
          - $HOME/android-sdk
          # Node modules
          - node_modules
      android:
        licenses:
          - 'android-sdk-preview-license-.+'
          - 'android-sdk-license-.+'
          - 'google-gdk-license-.+'
        components:
          - tools
          - platform-tools
          - android-$EMULATOR_API
          - build-tools-$ANDROID_BUILD_TOOLS
          - extra-android-support
          - extra-android-m2repository
          - extra-google-m2repository
          - sys-img-armeabi-v7a-android-$EMULATOR_API
      before_install:
        - yes | sdkmanager "platforms;android-28" 
        - echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
        - echo "y" | android update sdk -a --no-ui --filter sys-img-armeabi-v7a-android-$EMULATOR_API
        - echo no | android create avd --force -n test -t android-$EMULATOR_API --abi armeabi-v7a
        - echo "y" | android update sdk -a --no-ui --filter android-$EMULATOR_API
        - echo no | android create avd --force -n test -t android-$EMULATOR_API --abi armeabi-v7a
        - emulator -avd test -no-skin -no-window &
        - android-wait-for-emulator
        - adb shell input keyevent 82 &
        - adb wait-for-device get-serialno
       # Install npm 
        - nvm install 10
       # Yarn instalation         
        - curl -o- -L https://yarnpkg.com/install.sh | bash
        - export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
      install:
        # Download and unzip the Android SDK tools (if not already there thanks to the cache mechanism)
        # Latest version available here: https://developer.android.com/studio/#command-tools
        - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi
        - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $HOME/android-sdk
        # Install or update Android SDK components (will not do anything if already up to date thanks to the cache mechanism)
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools' > /dev/null
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platform-tools' > /dev/null
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'build-tools;27.0.3' > /dev/null
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platforms;android-27' > /dev/null
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'extras;google;m2repository' > /dev/null
        - yarn global add react-native-cli
        - yarn global add cavy-cli
        - yarn install --network-concurrency 1
      script:
        - react-native start --reset-cache &
        - cavy run-android